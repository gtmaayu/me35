
from re import L
import paho.mqtt.client as mqtt
import time
import math
import numpy as np
import matplotlib.pyplot as plt
from numpy import pi, sin, cos, sqrt
import matplotlib.animation as animation
#x,y coordinates and theta angles imported from MATLAB
#x  = [6,-5.86868686868687,-5.73737373737374,-5.60606060606061,-5.47474747474747,-5.34343434343434,-5.21212121212121,-5.08080808080808,-4.94949494949495,-4.81818181818182,-4.68686868686869,-4.55555555555556,-4.42424242424242,-4.29292929292929,-4.16161616161616,-4.03030303030303,-3.8989898989899,-3.76767676767677,-3.63636363636364,-3.50505050505051,-3.37373737373737,-3.24242424242424,-3.11111111111111,-2.97979797979798,-2.84848484848485,-2.71717171717172,-2.58585858585859,-2.45454545454545,-2.32323232323232,-2.19191919191919,-2.06060606060606,-1.92929292929293,-1.7979797979798,-1.66666666666667,-1.53535353535354,-1.4040404040404,-1.27272727272727,-1.14141414141414,-1.01010101010101,-0.878787878787879,-0.747474747474747,-0.616161616161616,-0.484848484848484,-0.353535353535354,-0.222222222222222,-0.0909090909090908,0.0404040404040407,0.171717171717172,0.303030303030303,0.434343434343434,0.565656565656566,0.696969696969697,0.828282828282828,0.959595959595959,1.09090909090909,1.22222222222222,1.35353535353535,1.48484848484848,1.61616161616162,1.74747474747475,1.87878787878788,2.01010101010101,2.14141414141414,2.27272727272727,2.4040404040404,2.53535353535353,2.66666666666667,2.7979797979798,2.92929292929293,3.06060606060606,3.19191919191919,3.32323232323232,3.45454545454546,3.58585858585859,3.71717171717172,3.84848484848485,3.97979797979798,4.11111111111111,4.24242424242424,4.37373737373737,4.50505050505051,4.63636363636364,4.76767676767677,4.8989898989899,5.03030303030303,5.16161616161616,5.29292929292929,5.42424242424242,5.55555555555556,5.68686868686869,5.81818181818182,5.94949494949495,6.08080808080808,6.21212121212121,6.34343434343434,6.47474747474747,6.60606060606061,6.73737373737374,6.86868686868687,7]
#y = [-16,-15.8390640410842,-15.6814124894933,-15.5270453452272,-15.3759626082858,-15.2281642786693,-15.0836503563776,-14.9424208414107,-14.8044757337687,-14.6698150334514,-14.5384387404589,-14.4103468547913,-14.2855393764485,-14.1640163054304,-14.0457776417372,-13.9308233853688,-13.8191535363253,-13.7107680946065,-13.6056670602125,-13.5038504331434,-13.405318213399,-13.3100704009795,-13.2181069958848,-13.1294279981149,-13.0440334076698,-12.9619232245495,-12.883097448754,-12.8075560802834,-12.7352991191375,-12.6663265653165,-12.6006384188202,-12.5382346796488,-12.4791153478022,-12.4232804232804,-12.3707299060834,-12.3214637962113,-12.2754820936639,-12.2327847984414,-12.1933719105436,-12.1572434299707,-12.1243993567226,-12.0948396907993,-12.0685644322008,-12.0455735809271,-12.0258671369782,-12.0094451003542,-11.9963074710549,-11.9864542490805,-11.9798854344309,-11.9766010271061,-11.9766010271061,-11.9798854344309,-11.9864542490805,-11.9963074710549,-12.0094451003542,-12.0258671369782,-12.0455735809271,-12.0685644322008,-12.0948396907993,-12.1243993567226,-12.1572434299707,-12.1933719105436,-12.2327847984414,-12.2754820936639,-12.3214637962113,-12.3707299060834,-12.4232804232804,-12.4791153478022,-12.5382346796488,-12.6006384188202,-12.6663265653165,-12.7352991191375,-12.8075560802834,-12.883097448754,-12.9619232245495,-13.0440334076698,-13.1294279981149,-13.2181069958848,-13.3100704009795,-13.405318213399,-13.5038504331434,-13.6056670602125,-13.7107680946065,-13.8191535363253,-13.9308233853688,-14.0457776417372,-14.1640163054304,-14.2855393764485,-14.4103468547913,-14.5384387404589,-14.6698150334514,-14.8044757337687,-14.9424208414107,-15.0836503563776,-15.2281642786693,-15.3759626082858,-15.5270453452272,-15.6814124894933,-15.8390640410842,-16]
x = [-6,-4.55555555555556,-3.11111111111111,-1.66666666666667,-0.222222222222222,1.22222222222222,2.66666666666667,4.11111111111111,5.55555555555556,7]
y =[-16,-14.4103468547913,-13.2181069958848,-12.4232804232804,-12.0258671369782,-12.0258671369782,-12.4232804232804,-13.2181069958848,-14.4103468547913,-16]


#combining above lists into coordinate pair lists
coord=[]
for x1, y1 in zip( x, y ):
    coord.append( [ x1, y1 ] )
    





# input parameters
l1 = 7.0 #base link
l2 = 13.0 #link 2
rot_num = 1 # number of crank rotations  




#functions:
def ik(x,y):
    l3 = math.sqrt(x**2+y**2)
    if l3 > (l1 + l2):
        print("Error: target position out of range")
        return

    b1 = (l1**2 + l3**2 - l2**2)/(2*l1*l3);
    a1 = math.atan2(math.sqrt(1-b1**2),b1);
    t1 = math.atan2(y,x) - a1
    b2 = (l1**2 + l2**2 - l3**2)/(2*l1*l2);
    a2 = math.atan2(math.sqrt(1-b2**2),b2);

    t2 = math.pi - a2
    
    # in radians
    return (t1,t2)

def fk(theta_1,theta_2):
    '''
    t1,t2 radians -> x,y
    '''
    X = l1*np.cos(theta_1) + l2*np.cos(theta_1 + theta_2)
    Y = l1*np.sin(theta_1) + l2*np.sin(theta_1 + theta_2)
    return (X,Y)




theta_1=[]
theta_2 =[]

x_fk =[]
y_fk=[]

for coor in coord:
    t1, t2 = ik(coor[0], coor[1])
    x1,y1 = fk(t1,t2)
    x_fk.append(x1)
    y_fk.append(y1)
    theta_1.append(t1)
    theta_2.append(t2)



plt.scatter(x_fk,y_fk)
plt.show()



theta_1, theta_2 = np.array(theta_1), np.array(theta_2)
print(theta_1)
print(theta_2)
n = len(theta_1)
X1 = l1*cos(theta_1) # x-cooridnate of the crank: Point 1
Y1 = l1*sin(theta_1) # y-cooridnate of the crank: Point 1
X2 = np.array(x)
Y2 = np.array(y)

#print(sqrt((X2 - X1)**2 + (Y2 - Y1)**2))

# set up the figure and subplot
fig = plt.figure()
ax = fig.add_subplot(111, aspect='equal', autoscale_on=False, xlim=(-15,15), ylim=(-20,5))
ax.grid()
ax.axes.xaxis.set_ticklabels([])
ax.axes.yaxis.set_ticklabels([])
line, = ax.plot([], [], 'o-', lw=5, color='#de2d26')


# initialization function
def init():
    line.set_data([], [])
    return line,

# animation function
def animate(i):
    x_points = [0, X1[i], X2[i]]
    y_points = [0, Y1[i], Y2[i]]

    line.set_data(x_points, y_points)
    return line,

# call the animation
ani = animation.FuncAnimation(fig, animate, init_func=init, frames=len(X1), interval=200, blit=True, repeat=True)


#show the animation
plt.show()